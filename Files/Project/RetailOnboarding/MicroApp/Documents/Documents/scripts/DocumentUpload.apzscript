apz.docmnt.DocumentUpload = {};
apz.docmnt.DocumentUpload.documents = [];
apz.docmnt.docName = "";
apz.docmnt.arrayName = "";
apz.docmnt.elementId = "";
apz.docmnt.rowIndex = "";
apz.docmnt.androidOption = "";
apz.app.onLoad_DocumentUpload = function(params) {
    debugger;
    $("#navigation_" + apz.flowNo).removeClass("sno");
    $("#apzonb__Navigator__el_progressstep_1_ext li").each(function() {
        $(this).removeClass("active");
    })
    $("#navigation_"+apz.flowNo+",#navgtn__MobileNavigation__ct_lst_2_row_"+apz.flowNo).addClass("active");
    setTimeout(function() {
        apz.docmnt.DocumentUpload.fnGetDocumentsCB();
    }, 100)
};
apz.docmnt.DocumentUpload.fnGetDocuments = function() {
    debugger;
    apz.startLoader();
    setTimeout(function() {
        var lParams = {
            "ifaceName": "DocumentDetails_Query",
            "buildReq": "N",
            "req": {
                "tbDbmiCustomerDocuments": {
                    "refNo": apz.refNo
                }
            },
            "appId": "docmnt",
            "paintResp": "N",
            "async": false,
            "callBack": apz.docmnt.DocumentUpload.fnGetDocumentsCB
        }
        apz.server.callServer(lParams);
    }, 10)
}
apz.docmnt.DocumentUpload.fnGetDocumentsCB = function(params) {
    debugger;
    var IdentityDocuments = [],
        AddressDocuments = [],
        OtherDocuments = [],
        PhotoSignature = [];
    //if (params.status && params.errors === undefined) {
        //apz.docmnt.DocumentUpload.documents = params.res.docmnt__DocumentDetails_Res.tbDbmiCustomerDocuments;
        apz.docmnt.DocumentUpload.documents = apz.documentArray;
        apz.documentArray=[];
        IdentityDocuments = apz.docmnt.DocumentUpload.documents.filter(item => item.docType === "IdentityDocuments");
        AddressDocuments = apz.docmnt.DocumentUpload.documents.filter(item => item.docType === "AddressDocuments");
        OtherDocuments = apz.docmnt.DocumentUpload.documents.filter(item => item.docType === "OtherDocuments");
        PhotoSignature = apz.docmnt.DocumentUpload.documents.filter(item => item.docType === "PhotoSignature");
    //}
    apz.data.scrdata.docmnt__UpdateDocuments_Res = {
        "IdentityDocuments": IdentityDocuments,
        "AddressDocuments": AddressDocuments,
        "OtherDocuments": OtherDocuments,
        "PhotoSignature": PhotoSignature
    };
    apz.data.loadData("UpdateDocuments", "docmnt");
    apz.docmnt.DocumentUpload.fnShowImage(IdentityDocuments, "IdentityDocuments","2");
    apz.docmnt.DocumentUpload.fnShowImage(AddressDocuments, "AddressDocuments","3");
    apz.docmnt.DocumentUpload.fnShowImage(OtherDocuments, "OtherDocuments","4");
    apz.docmnt.DocumentUpload.fnShowImage(PhotoSignature, "PhotoSignature","5");
    apz.stopLoader();
}
apz.docmnt.DocumentUpload.fnClickOrgImage = function(element) {
    debugger;
    $(element).prev().click();
}
apz.docmnt.DocumentUpload.fnShowImage = function(docuArray, docuType,rowNo) {
    debugger;
    if (docuArray.length > 0) {
        for (var i = 0, len = docuArray.length; i < len; i++) {
            if (docuArray[i].docData !== "") {
                var listId = "docmnt__DocumentUpload__" + docuType + "_lst_row_" + i;
                $("#" + listId).find(".imageRow").removeClass("sno");
                $("#" + listId).find(".uploadIcon").addClass("sno");
            }
        }
    }
    else{
        $("#docmnt__DocumentUpload__gr_col_"+rowNo).addClass("sno");
    }
}
apz.docmnt.DocumentUpload.fnUploadDetails = function(element, arrayName, processType) {
    debugger;
    var rowno = $(element).attr("rowno");
    apz.docmnt.rowIndex = rowno;
    apz.docmnt.arrayName = arrayName;
    apz.docmnt.docName = apz.data.scrdata.docmnt__UpdateDocuments_Res[arrayName][rowno].docName;
    apz.docmnt.elementId = "docmnt__UpdateDocuments__o__" + arrayName + "__docData_" + rowno;
    if (processType === "Upload") {
        if (apz.deviceOs !== "WEB" && apz.deviceOs !== "SIMULATOR" && apz.docmnt.docName === "Upload your signature") {
            apz.docmnt.DocumentUpload.fnGetSession();
        } else {
            apz.docmnt.DocumentUpload.fnUploadFile();
        }
    } else {
        $("#docmnt__DocumentUpload__docName").html(apz.docmnt.docName)
        var Image = apz.getElmValue(apz.docmnt.elementId);
        apz.setElmValue("docmnt__DocumentUpload__docImage", Image);
        $("#docmnt__DocumentUpload__gr_row_8").removeClass("sno");
    }
}
apz.docmnt.DocumentUpload.fnProceedDoc = function() {
    $("#docmnt__DocumentUpload__gr_row_8").addClass("sno");
}
apz.docmnt.DocumentUpload.fnRetake = function() {
    $("#docmnt__DocumentUpload__gr_row_8").addClass("sno");
    if (apz.deviceOs !== "WEB" && apz.deviceOs !== "SIMULATOR" && apz.docmnt.docName === "Upload your signature") {
        apz.docmnt.DocumentUpload.fnGetSession();
    } else {
        apz.docmnt.DocumentUpload.fnUploadFile();
    }
}
apz.docmnt.DocumentUpload.fnUploadFile = function() {
    debugger;
    if (apz.deviceOs !== "WEB" && apz.deviceOs !== "SIMULATOR") {
        apz.toggleModal({
            "targetId": "docmnt__DocumentUpload__pu_mdl_2"
        })
    } else {
        $("#docmnt__DocumentUpload__el_fil_1").trigger("click");
    }
};
apz.docmnt.DocumentUpload.fnGetFile = function(pthis) {
    debugger;
    let fileObj = pthis.files[0];
    let apzFileReader = new FileReader();
    apzFileReader.onload = function() {
        debugger;
        let encodedImage = apzFileReader.result.split(",").pop();
        apz.docmnt.DocumentUpload.fnGetBase64({
            "status": true,
            "encodedImage": encodedImage
        })
        $("#" + pthis.id).val("");
    }
    apzFileReader.readAsDataURL(fileObj);
};
apz.docmnt.DocumentUpload.fnAndroidUpload = function(uploadOption) {
    $("#docmnt__DocumentUpload__pu_mdl_2_close").click();
    apz.docmnt.androidOption = uploadOption;
    apz.docmnt.DocumentUpload.fnGetSession();
}
apz.docmnt.DocumentUpload.fnGetSession = function() {
    var callback;
    if (apz.docmnt.docName === "Upload your signature") {
        callback = apz.docmnt.DocumentUpload.fnOpenSignturePad;
    } else {
        callback = apz.docmnt.DocumentUpload.fnOpenCamera;
    }
    apz.server.login({
        "appId": "docmnt",
        "userId": "admin",
        "pwd": "admin",
        "callBack": callback
    })
}
apz.docmnt.DocumentUpload.fnOpenCamera = function(params) {
    var jsonobj = {
        "zoomLevel": "20",
        "targetWidth": "200",
        "targetHeight": "200",
        "crop": "N", //Y or N
        "flash": "N",
        "action": "base64", // save,base64
        "fileName": "Identity_Image",
        "quality": "50",
        "encodingType": "JPG",
        "sourceType": apz.docmnt.androidOption // photo
    };
    jsonobj.id = "CAMERA_ID";
    jsonobj.callBack = apz.docmnt.DocumentUpload.fnGetBase64;
    apz.ns.openCamera(jsonobj);
}
apz.docmnt.DocumentUpload.fnOpenSignturePad = function() {
    var params = {};
    params.id = "SIGNATUREPAD_ID";
    params.callBack = apz.docmnt.DocumentUpload.fnGetBase64;
    apz.ns.signaturePad(params);
}
apz.docmnt.DocumentUpload.fnGetBase64 = function(data) {
    debugger;
    if (data.status) {
        if (apz.mockServer || apz.docmnt.docName === "Upload your signature") {
            apz.docmnt.DocumentUpload.fnGetBase64CB({
                "status": true,
                "errors": undefined,
                "res": {
                    "docmnt__DocumentCompress_Res": {
                        "compressedimage": data.encodedImage
                    }
                }
            })
        } else {
            apz.startLoader();
            $("#apzloader").addClass("fileSize");
            setTimeout(function() {
                var lParams = {
                    "ifaceName": "DocumentCompress",
                    "buildReq": "N",
                    "req": {
                        "Image": data.encodedImage
                    },
                    "appId": "docmnt",
                    "paintResp": "N",
                    "async": false,
                    "callBack": apz.docmnt.DocumentUpload.fnGetBase64CB
                }
                apz.server.callServer(lParams);
            }, 10)
        }
    }
}
apz.docmnt.DocumentUpload.fnGetBase64CB = function(params) {
    $("#apzloader").removeClass("fileSize");
    apz.stopLoader();
    if (params.status && params.errors === undefined) {
        var listId = "docmnt__DocumentUpload__" + apz.docmnt.arrayName + "_lst_row_" + apz.docmnt.rowIndex;
        $("#" + listId).find(".imageRow").removeClass("sno");
        $("#" + listId).find(".uploadIcon").addClass("sno");
        apz.setElmValue(apz.docmnt.elementId, params.res.docmnt__DocumentCompress_Res.compressedimage);
    }
}
apz.docmnt.DocumentUpload.fnOpenSelfieCapture = function() {
    debugger;
    var jsonobj = {};
    jsonobj.id = "CALLLOGS";
    jsonobj.type = "base64";
    jsonobj.fileName = "FILE_PATH"; //mandatory if type is "file"
    jsonobj.encodingType = "PNG"; // default is JPEG encoding
    jsonobj.quality = 100; //default is 100
    jsonobj.blinkEyeDetection = "Y";
    jsonobj.blinkInstruction = "Blink your eyes slowly.";
    jsonobj.pageTitle = "Capture A Selfie ";
    jsonobj.faceInstruction1 = "Position your face inside the oval frame.";
    jsonobj.faceInstruction2 = "Your face is too far. Please move closer.";
    jsonobj.faceInstruction3 = "Your face is too close. Please move further away.";
    jsonobj.scanStatus = "Capturing...";
    jsonobj.fontColor = "#000000";
    jsonobj.overlayColor = "#FFFFFF";
    jsonobj.holdTimeInstruction = "Hold steady";
    jsonobj.instructionPosition = "1";
    jsonobj.holdTimeForCapture = "4";
    jsonobj.nativePreviewScreen = "Y";
    jsonobj.callBack = apz.docmnt.DocumentUpload.fnOpenSelfieCaptureCB;
    apz.ns.selfieCapture(jsonobj);
}
apz.docmnt.DocumentUpload.fnOpenSelfieCaptureCB = function(params) {
    debugger;
    if (params.status) {
        apz.docmnt.DocumentUpload.fnGetBase64({
            status: true,
            encodedImage: params.outputFile.data
        });
    }
}
apz.docmnt.DocumentUpload.saveApplicationDetails = function() {
    debugger;
    var documents = apz.data.buildData("UpdateDocuments", "docmnt").docmnt__UpdateDocuments_Res;
    apz.docmnt.DocumentUpload.fnUpdateDocumentList(documents.IdentityDocuments);
    apz.docmnt.DocumentUpload.fnUpdateDocumentList(documents.AddressDocuments);
    apz.docmnt.DocumentUpload.fnUpdateDocumentList(documents.OtherDocuments);
    apz.docmnt.DocumentUpload.fnUpdateDocumentList(documents.PhotoSignature);
    apz.documentArray = documents.IdentityDocuments.concat(documents.AddressDocuments).concat(documents.OtherDocuments).concat(documents.PhotoSignature);
    apz.docmnt.DocumentUpload.deletedata();
};
apz.docmnt.DocumentUpload.fnUpdateDocumentList = function(DocumentArrray) {
    debugger;
    DocumentArrray.forEach(function(doc, i) {
        if (doc.seqNo) {
            delete doc.seqNo;
        }
        if (!doc.docId) {
            doc.docId = +new Date() + i
        }
        if (doc.docData.length < 200) {
            doc.docData = "";
        }
    });
}
apz.docmnt.DocumentUpload.deletedata = function() {
    var lParams = {
        "ifaceName": "DocumentDetails_Delete",
        "buildReq": "N",
        "req": {
            "tbDbmiCustomerDocuments": {
                "refNo": apz.refNo
            }
        },
        "appId": "docmnt",
        "paintResp": "N",
        "callBack": apz.docmnt.DocumentUpload.deletedataCB
    }
    apz.server.callServer(lParams);
}
apz.docmnt.DocumentUpload.deletedataCB = function(pResp) {
    apz.docmnt.DocumentUpload.insertDocument();
}
apz.docmnt.DocumentUpload.insertDocument = function() {
    debugger
    var lParams = {
        "ifaceName": "DocumentDetails_New",
        "buildReq": "N",
        "req": {
            "tbDbmiCustomerDocuments": apz.documentArray
        },
        "appId": "docmnt",
        "paintResp": "N",
        "callBack": apz.docmnt.DocumentUpload.insertDocumentCB
    }
    apz.server.callServer(lParams);
}
apz.docmnt.DocumentUpload.insertDocumentCB = function(pResp) {
    debugger;
    apz.navgtn.Navigator.fnLaunchApp();
}
