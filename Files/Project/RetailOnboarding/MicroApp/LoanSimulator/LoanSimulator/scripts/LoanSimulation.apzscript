apz.lnsmlr.loansimulation = {};
apz.lnsmlr.loansimulation.sParams = {}
var graphObj = [];
var sliderTI = document.getElementById("lnsmlr__LoanSimulation__sliderTI");
var inputTI = document.getElementById("lnsmlr__LoanSimulation__inputTI");
var sliderROI = document.getElementById("lnsmlr__LoanSimulation__sliderROI");
var inputROI = document.getElementById("lnsmlr__LoanSimulation__inputROI");
var sliderTenure = document.getElementById("lnsmlr__LoanSimulation__sliderTenure");
var inputTenure = document.getElementById("lnsmlr__LoanSimulation__inputTenure");
apz.app.onLoad_LoanSimulation = function(params) {
    apz.lnsmlr.loansimulation.sParams = params;
    apz.hide("lnsmlr__LoanSimulation__chartcolumn");
    apz.hide("lnsmlr__LoanSimulation__amorttable");
    apz.hide("lnsmlr__LoanSimulation__amortStackedChart");
    apz.hide("lnsmlr__LoanSimulation__chartTitle");
};
apz.app.onShown_LoanSimulation = function() {
    debugger;
    apz.app.updateChartBeforeRender = function(gChartType, gChartData, gId, gChart) {
        gChartData.chart.bgColor = "transparent";
        gChartData.chart.labelFontColor = "#fff";
    }
    apz.setElmValue("lnsmlr__LoanSimulation__inputTI", "100000");
    $("#lnsmlr__LoanSimulation__inputTI").blur();
    apz.setElmValue("lnsmlr__LoanSimulation__inputROI", "6.5");
    apz.setElmValue("lnsmlr__LoanSimulation__inputTenure", "5");
    sliderTI.addEventListener("input", apz.lnsmlr.loansimulation.updateValueTotalInvestment);
    sliderROI.addEventListener("input", apz.lnsmlr.loansimulation.updateValueExpectedReturns);
    sliderTenure.addEventListener("input", apz.lnsmlr.loansimulation.updateValueTimePeriod);
    apz.lnsmlr.loansimulation.AttachInputListeners();
    apz.lnsmlr.loansimulation.fnCalculateEMI();
};
apz.lnsmlr.loansimulation.showTotalInvestmentVal = function(newVal) {
    sliderTI.value = newVal;
    apz.lnsmlr.loansimulation.fnCalculateEMI();
}
apz.lnsmlr.loansimulation.showExpectedReturnsVal = function(newVal) {
    sliderROI.value = newVal;
    apz.lnsmlr.loansimulation.fnCalculateEMI();
}
apz.lnsmlr.loansimulation.showTimePeriodVal = function(newVal) {
    sliderTenure.value = newVal;
    apz.lnsmlr.loansimulation.fnCalculateEMI();
}
apz.lnsmlr.loansimulation.updateValueTotalInvestment = function(e) {
    inputTI.value = e.srcElement.value;
    $("#lnsmlr__LoanSimulation__inputTI").blur();
    apz.lnsmlr.loansimulation.fnCalculateEMI();
}
apz.lnsmlr.loansimulation.updateValueExpectedReturns = function(e) {
    inputROI.value = e.srcElement.value;
    apz.lnsmlr.loansimulation.fnCalculateEMI();
}
apz.lnsmlr.loansimulation.updateValueTimePeriod = function(e) {
    inputTenure.value = e.srcElement.value;
    apz.lnsmlr.loansimulation.fnCalculateEMI();
}
apz.lnsmlr.loansimulation.fnCalculateEMI = function() {
    debugger;
    $("#lnsmlr__LoanSimulation__EMIAMT").removeClass("shownone");
    graphObj = [];
    apz.lnsmlr.loansimulation.sParams.amount = inputTI.value;
    var unformateTI = apz.unFormatNumber({
        value: inputTI.value,
        decimalSep: ".",
        displayAsLiteral: "N"
    }).split(".");
    var lPrincipal = Number(unformateTI[0]);
    var lTenure = Number(inputTenure.value);
    apz.lnsmlr.loansimulation.sParams.tenor = lTenure;
    var lROI = Number(inputROI.value);
    var lMonthlyTenure = lTenure * 12;
    var lMonthlyROI = lROI / (12 * 100);
    var lEmi = apz.lnsmlr.loansimulation.fnvalueEMI(lPrincipal, lMonthlyROI, lMonthlyTenure);
    var lObj1 = {
        "value": lEmi,
        "decimalSep": '.',
        "displayAsLiteral": 'N',
        "mask": "LAKH"
    }
    $("#emi").html("Your Monthly EMI is <span class='emi-txt-mobile'>$" + apz.formatNumber(lObj1) + "</span>");
    $("#lnsmlr__LoanSimulation__emiweb").val(" " + apz.formatNumber(lObj1));
    var lChartTotalInterest = {
        "type": "Total Interest ",
        "amount": (lEmi * lMonthlyTenure) - lPrincipal
    };
    graphObj.push(lChartTotalInterest);
    var lChartLoanAmount = {
        "amount": parseInt(lPrincipal),
        "type": "Loan Amount"
    };
    graphObj.push(lChartLoanAmount);
    var lArmotScheduleJSON = [];
    apz.lnsmlr.loansimulation.fnCalcAmortizationSchedule(lEmi, lPrincipal, lMonthlyROI, lMonthlyTenure, 1, lArmotScheduleJSON);
    apz.data.scrdata.lnsmlr__LoanSimulation_Req = {};
    apz.data.scrdata.lnsmlr__LoanSimulation_Req.LoanGraph = graphObj;
    apz.data.scrdata.lnsmlr__LoanSimulation_Req.EMI = lArmotScheduleJSON;
    apz.data.loadData("LoanSimulation", "lnsmlr");
    //setTimeout(apz.lnsmlr.loansimulation.fnPaintStackedChart();
    setTimeout(function() {
        apz.lnsmlr.loansimulation.fnPaintStackedChart()
    }, 100);
    //var lAmortResp = JSON.stringify(lArmotScheduleJSON);
    apz.show("lnsmlr__LoanSimulation__chartcolumn");
    apz.show("lnsmlr__LoanSimulation__amorttable");
    apz.show("lnsmlr__LoanSimulation__chartTitle");
    apz.show("lnsmlr__LoanSimulation__amortStackedChart");
};
apz.lnsmlr.loansimulation.fnFormatNumber = function() {
    debugger;
}
apz.lnsmlr.loansimulation.fnvalueEMI = function(pPrincipal, pMonthlyROI, pMonthlyTenure) {
    var lMonthyEMI = (pMonthlyROI * pPrincipal * Math.pow((1 + pMonthlyROI), pMonthlyTenure)) / (Math.pow((1 + pMonthlyROI), pMonthlyTenure) - 1);
    //alert("Monthly EMI = " + lMonthyEMI);
    return Math.round((lMonthyEMI * 100) / 100);
};
apz.lnsmlr.loansimulation.fnCalcAmortizationSchedule = function(pEmi, pPrincipal, pROI, pTenure, pCurrPeriod, pArmotScheduleJSON) {
    if (pCurrPeriod <= pTenure) {
        var lMonthInterest = Math.round((pPrincipal * pROI * 100) / 100);
        var lMonthPrincipal = Math.round(((pEmi - lMonthInterest) * 100) / 100);
        var lBalance = Math.round(((pPrincipal - lMonthPrincipal) * 100) / 100);
        var lCurrAmort = {};
        lCurrAmort.Interest = lMonthInterest;
        lCurrAmort.Principal = lMonthPrincipal;
        lCurrAmort.Balance = lBalance;
        lCurrAmort.Period = pCurrPeriod;
        pArmotScheduleJSON.push(lCurrAmort);
        pCurrPeriod = pCurrPeriod + 1;
        apz.lnsmlr.loansimulation.fnCalcAmortizationSchedule(pEmi, lBalance, pROI, pTenure, pCurrPeriod, pArmotScheduleJSON);
    }
};
apz.lnsmlr.loansimulation.fnPaintStackedChart = function() {
    debugger;
    var ldata = apz.data.scrdata.lnsmlr__LoanSimulation_Req.EMI;
    var lcategory = [];
    var lPrincipal = [];
    var lInterest = [];
    var lBalance = [];
    var lPrincipalValue = 0,
        lInterestValue = 0,
        lBalanceValue = 0;
    var date = new Date();
    var year = date.getFullYear();
    for (var i = 0; i < ldata.length; i++) {
        lPrincipalValue += ldata[i].Principal;
        lInterestValue += ldata[i].Interest;
        lBalanceValue += ldata[i].Balance;
        if (Number.isInteger(ldata[i].Period / 12)) {
            var obj = {
                "label": year.toString()
            };
            lcategory.push(obj);
            var pobj = {
                "value": lPrincipalValue
            };
            lPrincipal.push(pobj);
            var iobj = {
                "value": lInterestValue
            };
            lInterest.push(iobj);
            var bobj = {
                "value": lBalanceValue
            };
            lBalance.push(bobj);
            lInterestValue = lBalanceValue = lPrincipalValue = 0;
            year++;
        }
    }
    var revenueChart = new FusionCharts({
        type: 'msstackedcolumn2dlinedy',
        renderAt: 'lnsmlr__LoanSimulation__stackedChart',
        width: '100%',
        height: '350',
        dataFormat: 'json',
        dataSource: {
            "chart": {
                "caption": "",
                "subcaption": "",
                "xAxisName": "Period",
                "pYAxisName": "EMI Payment",
                "sYAxisName": "Balance Amount",
                "numberPrefix": "",
                "numbersuffix": "",
                "sNumberSuffix": "",
                "sYAxisMaxValue": "",
                //Cosmetics
                "paletteColors": "#a02cff,#0176c5,#FF0000",
                "baseFontColor": "#fff",
                "baseFont": "Helvetica Neue,Arial",
                "captionFontSize": "14",
                "subcaptionFontSize": "14",
                "subcaptionFontBold": "0",
                "showBorder": "0",
                "showValues": "0",
                "bgColor": "#000",
                "bgAlpha": "0",
                "showShadow": "0",
                "canvasBgColor": "#000",
                "canvasBgAlpha": "0",
                "canvasBorderAlpha": "0",
                "divlineAlpha": "100",
                "divlineColor": "#999999",
                "divlineThickness": "1",
                "divLineIsDashed": "1",
                "divLineDashLen": "1",
                "divLineGapLen": "1",
                "usePlotGradientColor": "0",
                "showplotborder": "0",
                "valueFontColor": "#ffffff",
                "placeValuesInside": "1",
                "showXAxisLine": "1",
                "xAxisLineThickness": "1",
                "xAxisLineColor": "#999999",
                "showAlternateHGridColor": "0",
                "legendBgAlpha": "0",
                "legendBorderAlpha": "0",
                "legendShadow": "0",
                "legendItemFontSize": "10",
                "legendItemFontColor": "#fff",
                "toolTipColor": "#333"
            },
            "categories": [{
                "category": lcategory
            }],
            "dataset": [{
                "dataset": [{
                    "seriesname": "Principal Paid",
                    "data": lPrincipal
                }, {
                    "seriesname": "Interest Paid",
                    "data": lInterest
                }]
            }],
            "lineset": [{
                "seriesname": "Outstanding Loan Balance",
                "data": lBalance
            }]
        }
    });
    revenueChart.render();
};
apz.lnsmlr.loansimulation.fnPownloadLoanSimulationDetails = function() {
    if (apz.data.scrdata.lnsmlr__LoanSimulation_Req) {
        var columns = [{
            title: "Month",
            dataKey: "Period"
        }, {
            title: "Principal",
            dataKey: "Principal"
        }, {
            title: "Interest",
            dataKey: "Interest"
        }, {
            title: "Loan Balance",
            dataKey: "Balance"
        }];
        var lloan, ltenor, linterest, lemi;
        lloan = $(".rs-tooltip-text").eq(0).text();
        ltenor = $(".rs-tooltip-text").eq(1).text();
        linterest = $(".rs-tooltip-text").eq(2).text();
        lemi = apz.getElmValue("lnsmlr__LoanSimulation__emiweb");
        /* lloan = apz.getElmValue("loanamount");
            ltenor = apz.getElmValue("tenor");
            linterest = apz.getElmValue("Interest")*/
        ;
        lemi = $(".emi-txt-mobile").text();
        var rows = apz.data.scrdata.lnsmlr__LoanSimulation_Req.EMI;
        var doc = new jsPDF('landscape');
        doc.text("Loan Calculator", 150, 10);
        doc.text("Loan Amount", 20, 20);
        doc.text(lloan, 100, 20);
        doc.text("Tenor(years)", 20, 30);
        doc.text(ltenor, 100, 30);
        doc.text("Interest Rate(%)", 20, 40);
        doc.text(linterest, 100, 40);
        doc.text("EMI VALUE", 20, 50);
        doc.text(lemi, 100, 50);
        doc.text("Amortization Schedule", 10, 65);
        doc.autoTable(columns, rows, {
            startY: 70,
        });
        doc.save("Loan Simulation.pdf");
    }
};
apz.lnsmlr.loansimulation.fnApply = function() {
    debugger;
    var params = {};
    params.appId = "onbaut";
    params.scr = "AuthLauncher";
    params.div = "navgtr__Navigator__launchDiv";
    params.userObj = {
        "parentdiv": "navgtr__Navigator__launchDiv",
        "subproduct": apz.lnsmlr.loansimulation.sParams.subtype,
        "product": apz.lnsmlr.loansimulation.sParams.product,
        "action": "new",
        "amount": apz.lnsmlr.loansimulation.sParams.amount,
        "tenor": apz.lnsmlr.loansimulation.sParams.tenor
    };
    apz.launchApp(params);
}
apz.lnsmlr.loansimulation.fnBack = function() {
    debugger;
    let lparams = {
        "appId": "prdsel",
        "scr": "SubProducts",
        "div": "prdsel__ProductLauncher__productlauncher",
        "userObj": {
            "product": apz.lnsmlr.loansimulation.sParams.product
        }
    };
    apz.launchApp(lparams);
}
apz.lnsmlr.loansimulation.AttachInputListeners = function() {
    inputTI.addEventListener("input", (e) => {
        let val = e.target.value;
        if (val < 0) {
            inputTI.value = 1000;
            apz.lnsmlr.loansimulation.fnCalculateEMI();
        }
        if (val > 100000000) {
            inputTI.value = 100000000;
            apz.lnsmlr.loansimulation.fnCalculateEMI();
        }
    });
    inputROI.addEventListener("input", (e) => {
        let val = e.target.value;
        if (val < 0) {
            inputROI.value = 1;
            apz.lnsmlr.loansimulation.fnCalculateEMI();
        }
        if (val > 15) {
            inputROI.value = 15;
            apz.lnsmlr.loansimulation.fnCalculateEMI();
        }
    });
    inputTenure.addEventListener("input", (e) => {
        let val = e.target.value;
        if (val < 1) {
            inputTenure.value = 1;
            apz.lnsmlr.loansimulation.fnCalculateEMI();
        }
        if (val > 30) {
            inputTenure.value = 30;
            apz.lnsmlr.loansimulation.fnCalculateEMI();
        }
    });
}
