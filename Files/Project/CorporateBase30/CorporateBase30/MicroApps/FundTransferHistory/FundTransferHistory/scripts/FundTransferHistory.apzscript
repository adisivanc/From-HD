apz.fthist.FundTransferHistory = {};
apz.fthist.FundTransferHistory.workflowdata=[];
apz.app.onLoad_FundTransferHistory = function() {
    debugger;
    $(".date input").attr("disabled", true);
    $("#fthist__FundTransferHistory__DetailsTableul_ttl,#fthist__FundTransferHistory__advice_bableul_ttl").addClass("sno");
   apz.fthist.FundTransferHistory.showTxns();
};
apz.fthist.FundTransferHistory.showTxns = function(){
    //  var txnJsonStr = apz.getFile(apz.getDataFilesPath() + "/" + "FundTransferHistory.json");
    // var txnJson = JSON.parse(txnJsonStr);
    // var txnJsonArr = txnJson.fthist__FundTransferHistory_Res;
    
    
     var lServerParams = {
        "ifaceName": "GetScheduledPayments_Query",
        "buildReq": "N",
        "req": "",
        "paintResp": "N",
        "async": "true",
        "callBack": apz.fthist.FundTransferHistory.fnGetScheduledPaymentsCB,
    };
    //  var req = {};
    //  req.tbDbmiWorkflowDetail = {};
    
    // lServerParams.req = req;
    apz.server.callServer(lServerParams);
    
    
    
    
    // var dateFormat = apz.dateFormat;
    // dateFormat = dateFormat.replace("yyyy", "Y");
    // dateFormat = dateFormat.replace("yy", "y");
    // dateFormat = dateFormat.replace("dd", "d");
    // dateFormat = dateFormat.replace("MMM", "M");
    // dateFormat = dateFormat.replace("MM", "m");
    // for (var i = 0; i < txnJsonArr.length; i++) {
    //     var date = new Date();
    //     txnJsonArr[i].txn_date = date.format(dateFormat);
    // }
    // apz.data.scrdata.fthist__FundTransferHistory_Res = txnJsonArr;
    // apz.data.loadData("FundTransferHistory", "fthist");
};

apz.fthist.FundTransferHistory.fnGetScheduledPaymentsCB =function(params){
    debugger;
     var ldata = params.res.fthist__GetScheduledPayments_Res.tbDbmiWorkflowDetail;
    var ldata1 = apz.fthist.FundTransferHistory.removeDuplicateRecords(ldata, 'instanceId');
    for (var i = 0; i < ldata1.length; i++) {
        var scrdata = JSON.parse(ldata1[i].screenData);
        for (var j in scrdata) {
            var nodedata = scrdata[j];
            for (var k in nodedata) {
                var objdata = nodedata[k];
               
                    var lobj = {};
                    lobj.ref = ldata1[i].instanceId;
                    lobj.initiated_by = ldata1[i].actorId;
                    lobj.txn_date = ldata1[i].startTs;
                    if (ldata1[i].workflowId == "FTOA") {
                        lobj.txn_type = "Own Account Transfer";
                    } else if (ldata1[i].workflowId == "FTDOM") {
                        lobj.txn_type = "Domestic Transfer";
                    } else if (ldata1[i].workflowId == "FTWB") {
                        lobj.txn_type = "Within Bank Transfer";
                    } else if (ldata1[i].workflowId == "FTINT") {
                        lobj.txn_type = "International Transfer";
                    }
                    if (objdata.fromaccount) {
                        lobj.acc_no = objdata.fromaccount;
                    } else {
                        lobj.acc_no = objdata.fromAccount;
                    }
                    if (objdata.toaccount) {
                        if (objdata.beneficiaryName != undefined) {
                            lobj.beneficiary = objdata.beneficiaryName + "-" + objdata.toaccount;
                        } else {
                            lobj.beneficiary = objdata.toaccount;
                        }
                    } else {
                        if (objdata.beneficiaryName != undefined) {
                            lobj.beneficiary = objdata.beneficiaryName + "-" + objdata.toAccount;
                        } else {
                            lobj.beneficiary = objdata.toAccount;
                        }
                    }
                    lobj.amount = objdata.amount;
                     lobj.drcr = "Dr";
                      //lobj.currency = "Dr";
                       //lobj.status = "Dr";
                    apz.fthist.FundTransferHistory.workflowdata.push(lobj);
                
            }
        }
    }
    
    
    
     apz.data.scrdata.fthist__FundTransferHistory_Res = {};
     apz.data.scrdata.fthist__FundTransferHistory_Res = apz.fthist.FundTransferHistory.workflowdata;
    apz.data.loadData("FundTransferHistory", "fthist");
}


apz.fthist.FundTransferHistory.removeDuplicateRecords = function(arr, comp) {
    debugger;
    // store the comparison  values in array
    const unique = arr.map(e => e[comp])
    // store the indexes of the unique objects
    .map((e, i, final) => final.indexOf(e) === i && i)
    // eliminate the false indexes & return unique objects
    .filter((e) => arr[e]).map(e => arr[e]);
    return unique;
}




apz.fthist.FundTransferHistory.fnResetFilter = function() {
    $("#fthist__FundTransferHistorys__countDays").attr("disabled", false);
    $(".date input").attr("disabled", true);
    apz.setElmValue("fthist__FundTransferHistory__countDays", "7");
    apz.setElmValue("fthist__FundTransferHistory__fromDate", "");
    apz.setElmValue("fthist__FundTransferHistory__toDate", "");
    apz.fthist.FundTransferHistory.showTxns();
};
apz.fthist.FundTransferHistory.fnPeriodType = function() {
    debugger;
    var lType = apz.getElmValue("fthist__FundTransferHistory__countDays");
    if (lType == 'Between') {
        // $("#fthist__FundTransferHistory__countDays").attr("disabled", true);
        $(".date input").attr("disabled", false);
    } else {
        // $("#fthist__FundTransferHistory__countDays").attr("disabled", false);
        $(".date input").attr("disabled", true);
        $("#fthist__FundTransferHistory__fromDate").val("");
        $("#fthist__FundTransferHistory__toDate").val("");
    }
};
apz.fthist.FundTransferHistory.showAdvice = function() {
    apz.toggleModal({
        targetId: "fthist__FundTransferHistory__advice_modal"
    });
    setTimeout(function(){apz.data.loadJsonData("Advice", "fthist")},300);
};
apz.fthist.FundTransferHistory.showAdviceDoc = function(pObj) {
    var rowNo = $(pObj).attr("rowno");
    var myBase64string = apz.data.scrdata.fthist__ImportLCDetails_Res.Advice[rowNo].advicedoc;
    var objbuilder = '';
    objbuilder += ('<object width="100%" height="100%" data="data:application/pdf;base64,');
    objbuilder += (myBase64string);
    objbuilder += ('" type="application/pdf" class="internal">');
    objbuilder += ('<embed src="data:application/pdf;base64,');
    objbuilder += (myBase64string);
    objbuilder += ('" type="application/pdf"  />');
    objbuilder += ('</object>');
    var win = window.open("#", "_blank");
    var title = "Advice document";
    win.document.write('<html><title>' + title + '</title><body style="margin-top: 0px; margin-left: 0px; margin-right: 0px; margin-bottom: 0px;">');
    win.document.write(objbuilder);
    win.document.write('</body></html>');
    var layer = jQuery(win.document);
};
