/******         
 * Purpose -- This Microapp implements the logic of OTP generation and on OTP validation initiating
 *              the actual system call.
 *            It has to be customized at the Java layer to send out the OTP Pin in sms or email formats.
 ******/
/* Expected Input Parameters
    "ifaceName" : "", --Name of the interface for which OTP is invoked
    "appId" : "", App ID of the Micro app which invoked the OTP
    "control" : {
        "callBack" : , -- On successful confirmation of the OTP, the microapp which to which the control should be handed over.
        "destroyDiv" : "" -- ID of the div container within which it is launched, from where it has to be removed 
                             on successful OTP completion
    }
    
 ******/
apz.otpeng = {};
apz.otpeng.processotp = {};
apz.otpeng.processotp.sAction = '';
apz.otpeng.processotp.sReferenceId = '';
apz.otpeng.processotp.sParams = {};
apz.app.onLoad_ProcessOTP = function(params) {
    debugger;
    if(apz.isOnline){
        apz.mockServer = false;
    }else{
        apz.mockServer = true;
    }
    apz.otpeng.processotp.sParams = params;
    $("#otpeng__ProcessOTP__el_icn_1_li").empty();
    $("#otpeng__ProcessOTP__el_icn_1_li").html('<svg><circle r="36" cx="40" cy="40"></circle></svg>');
    var countdownNumberEl = document.getElementById('otpeng__ProcessOTP__sc_row_14');
    var countdown = 30;
    countdownNumberEl.innerHTML = countdown;
    setInterval(function() {
        countdown = --countdown <= 0 ? 30 : countdown;
        countdownNumberEl.innerHTML = countdown;
    }, 1000);
    /*Aadhi*/
    if (params.action == 'SetRefNo') {
        apz.otpeng.processotp.fnLaunch(params);
    } else if (params.action == 'Generate') {
        apz.otpeng.processotp.sParentAction = "Generate";
        var lParams = {};
        lParams.ifaceName = "ProcessOTP";
        lParams.appId = "otpeng";
        lParams.data = {};
        apz.otpeng.processotp.fnGenerate(lParams);
    }
};
apz.otpeng.processotp.fnLaunch = function(params) {
    debugger;
    if(params && params.data && params.data.OTPRefNo){
    apz.otpeng.processotp.sReferenceId = params.data.OTPRefNo;
    }else{
    apz.otpeng.processotp.sReferenceId = "TNXN5523432300";
    }
    apz.setElmValue('otpeng__ProcessOTP__reference_Id', apz.otpeng.processotp.sReferenceId);
};
apz.otpeng.processotp.fnGenerate = function(params) {
    debugger;
    apz.otpeng.processotp.sAction = 'Generate';
    var lServerParams = {
        "ifaceName": params.ifaceName,
        "req": {
            "payload": params.data,
            "action": "Generate"
        },
        "callBack": apz.otpeng.processotp.fnGenerateCallBack
    };
    apz.otpeng.processotp.fnBeforeCallServer(lServerParams);
};
apz.otpeng.processotp.fnConfirm = function() {
    debugger;
    if (apz.otpeng.processotp.sParams.from && apz.otpeng.processotp.sParams.from == "authentication") {
        var lParams = {
            "appId": "cmrnav",
            "scr": "Launcher",
            "div": "menuap__Menu__MainLaunchArea",
            "type": "CF",
            "animation": 21,
            "userObj": {
                "data": apz.otpeng.processotp.sParams.data,
                "customerDetails": apz.otpeng.processotp.sParams.customerDetails,
                "destroyDiv": "menuap__Menu__MainLaunchArea",
                "parentAppId": "menuap",
                "loggedCust": "menuap__Menu__loggedinCust_txtcnt",
                "custImg": "menuap__Menu__custImg",
                "custId": "menuap__Menu__custId_txtcnt",
                "loggedCustImg": apz.pfauth.Authentication.sParams.loggedCustImg,
                "loggedCustId": apz.pfauth.Authentication.sParams.loggedCustId,
                "loggedCustBranch": apz.pfauth.Authentication.sParams.loggedCustBranch,
                "selectedCustImg": apz.pfauth.Authentication.sParams.custImage
            }
        }
        apz.launchApp(lParams);
    } else if (apz.otpeng.processotp.sParams.from && apz.otpeng.processotp.sParams.from == "cashtransaction") {
        apz.launchApp({
            appId: "cashtr",
            scr: "CashTransactionSuccess",
            div: "cmrnav__Launcher__Launcher",
            userObj: {
                data: {
                    accno: apz.otpeng.processotp.sParams.cashTransaction.accno,
                    amount: apz.otpeng.processotp.sParams.cashTransaction.amount,
                    type: apz.otpeng.processotp.sParams.cashTransaction.type
                }
            }
        })
    } else if (apz.otpeng.processotp.sParams.from && apz.otpeng.processotp.sParams.from == "ChangeStatus") {
        apz.dispMsg({
            message: "Your request to freeze the account has been processed successfully",
            type: "S",
            callBack: apz.cmrnav.fnLaunchConsumerHome
        });
    } else {
        apz.otpeng.processotp.sAction = 'Validate';
        var lReq = {
            "validateNProcessRequest": {
                "RefNo": apz.otpeng.processotp.sReferenceId,
                "otp": apz.getElmValue('otpeng__ProcessOTP__otp'),
                "action": "Validate"
            },
            "action": "Validate"
        };
        //apz.otpeng.ProcessOTP.sParams.callBack.call(lReq, lReq);
        var lServerParams = {
            "ifaceName": "otpeng__ProcessOTP",
            "buildReq": "N",
            "req": lReq,
            "callBack": apz.app.fnValidateCB,
            "internal": true
        };
        apz.otpeng.processotp.fnBeforeCallServer(lServerParams);
    }
};
apz.otpeng.processotp.fnRegenerate = function() {
    apz.otpeng.processotp.sAction = 'Resend';
    var lServerParams = {
        "ifaceName": "ProcessOTP",
        "req": {
            "action": "Resend",
            "payload": params.data
        }
    };
    apz.otpeng.processotp.fnBeforeCallServer(lServerParams);
};
apz.otpeng.processotp.fnBeforeCallServer = function(params) {
    debugger;
    var lServerParams = {
        "ifaceName": params.ifaceName,
        "buildReq": "N",
        "req": params.req,
        "paintResp": "N",
        "callBack": apz.otpeng.processotp.fnCallServerCallBack,
        "appId": "otpeng",
        "internal": false
    };
    if (apz.otpeng.processotp.sAction == 'Validate') {
        lServerParams.internal = true;
    }
    apz.server.callServer(lServerParams);
    if (apz.otpeng.processotp.sAction == "Generate" || apz.otpeng.processotp.sAction == "Resend") {
        $('#otpeng__ProcessOTP__otp').focus();
    }
};
apz.otpeng.processotp.fnCallServerCallBack = function(params) {
    debugger;
    if (apz.otpeng.processotp.sAction == 'Generate') {
        if (params.status) {
            if (apz.otpeng.processotp.sParentAction == "Generate") {
                // apz.otpeng.processotp.fnSendOTP(params);
            }
        }
    } else if (apz.otpeng.processotp.sAction == 'Validate') {
        if (apz.mockServer && apz.otpeng.processotp.sParentAction == "Generate") {
            var lParams = {};
            lParams.otpdetails = {};
            lParams.otpdetails.Status = "P";
            if (apz.otpeng.processotp.sParams.control.destroyDiv) {
                var lDestroy = apz.otpeng.processotp.sParams.control.destroyDiv;
                $('#' + lDestroy).children().remove();
            }
            apz.otpeng.processotp.sParams.control.callBack(lParams);
            apz.otpeng.processotp.sParentAction = "";
        } else {
            if (params.status) {
                apz.otpeng.processotp.fnDestroy(params.res);
            }
        }
    }
    if(!params || !params.res){
        
    }
};
apz.otpeng.processotp.fnDestroy = function(params) {
    if (apz.otpeng.processotp.sParams.control.destroyDiv) {
        var lDestroy = apz.otpeng.processotp.sParams.control.destroyDiv;
        $('#' + lDestroy).children().remove();
    }
    debugger;
    apz.otpeng.processotp.sParams.control.callBack(params);
};
apz.otpeng.processotp.fnSendOTP = function(lParams) {
    debugger;
    var lmobileNo = "8904131879";
    var lsenderID = "APZBNK";
    var lOtp = parseInt(lParams.res.otpeng__ProcessOTP_Res.generateOTPResponse.otp);
    var lmessage = "Your OTP is " + lOtp + ". Use this OTP for Registration";
    var llurl = "http://smshorizon.co.in/api/sendsms.php?user=Iexceed&apikey=XOTNwz3OffqcodOubdhl&mobile=" + lmobileNo + "&message=" + lmessage +
        "&senderid=" + lsenderID + "&type=txt";
    $.ajax({
        url: llurl,
        dataType: "JSONP",
        success: function(result, error) {
            console.log(result, error);
            var json = {};
            json.id = "SMSLIST_ID";
            json.callBack = startSMSCallback;
            apz.ns.startSMSListener(json);
        }
    });
};
startSMSCallback = function(params) {
    debugger;
    //params.message.match(/[0-9]{6}/)[0]
}
/*apz.app.postGetHeader = function(header){
    header.sessionId = 'gjdgasghgasfgafgas';
    return header;
};*/
